#summary How to use dbdroid
<wiki:toc max_depth="1" />

= Introduction =

*dbdroid* is an object-relational mapping (ORM) library for Android, providing a framework for mapping an object-oriented domain model to a traditional relational database.

*dbdroid* is free software that is distributed under the GNU Lesser General Public License.

*dbdroid* creates a mapping from Java classes to tables of a database, and from Java data types to SQL data types.

*dbdroid* uses an XML configuration file that declares the DAOs (Data Access Object). Each DAO is associated with a Java class with the Entity annotation. It is this Java class that is mapped to a table in the database.
So we have: a DAO => a Entity => a table.


= Entity =

== Entity Annotation ==

To create an Entity, just add the 'Entity' annotation to a Java class

{{{
@Entity
public class MyEntity {
...
}
}}}

You can add the 'name' attribute to the 'Entity' annotation to define the table name to create in the database.

{{{
@Entity(name="my_entity")
public class MyEntity {
...
}
}}}

== Entity fields ==

Each field of a class annotated as Entity corresponds to a column of the table.
So if we have:
{{{
@Entity(name="my_entity")
public class MyEntity {
    private int myField1;
    private String myField2;
}
}}}
Then the table "my_entity" will be defined as having two columns :
 * "myField1" whose data type is Integer, 
 * "myField2" whose data type is String.

== ID Annotation ==

= DAO =

= XML configuration file =